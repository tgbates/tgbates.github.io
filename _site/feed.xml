<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thomas G Bates</title>
    <description>The blog of Thomas G Bates, in which our hero describes his adventures with linux, javascript, ServiceNow, books, and anything else he believes is worth posting.
</description>
    <link>http://tgbates.com/</link>
    <atom:link href="http://tgbates.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 12 Jan 2016 03:44:51 -0600</pubDate>
    <lastBuildDate>Tue, 12 Jan 2016 03:44:51 -0600</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Setting up a MIDI Keyboard in Linux Mint 17.1</title>
        <description>&lt;h1 id=&quot;setting-up-a-midi-keyboard&quot;&gt;Setting up a MIDI Keyboard&lt;/h1&gt;

&lt;p&gt;I bought a MIDI Keyboard last year and this was the process to get it working.&lt;br /&gt;
&lt;a href=&quot;https://rafalcieslak.wordpress.com/2012/08/29/usb-midi-controllers-and-making-music-with-ubuntu/&quot;&gt;Rafal Cieslak&#39;s article&lt;/a&gt; was helpful in getting me running and understanding what I was doing.  I used another article for the setup but it is no longer online.&lt;/p&gt;

&lt;h2 id=&quot;synaptic&quot;&gt;Synaptic&lt;/h2&gt;
&lt;p&gt;install jack, jackd, qsynth and qjackctl&lt;/p&gt;

&lt;h2 id=&quot;qsynth&quot;&gt;Qsynth&lt;/h2&gt;
&lt;p&gt;click Setup -&amp;gt; Soundfonts -&amp;gt; Open and add the sf2 file in /usr/share/sounds/sf2&lt;/p&gt;

&lt;p&gt;In my install, it was TimGM6mb.sf2&lt;/p&gt;

&lt;p&gt;Click ‘Yes’ to restart the engine&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/qsynth_setup01.jpg&quot; alt=&quot;qsynth setup&quot; title=&quot;qsynth setup&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;plug-in-your-usb-midi-controller&quot;&gt;Plug in your USB midi controller&lt;/h2&gt;

&lt;h2 id=&quot;open-qjackctl&quot;&gt;Open Qjackctl&lt;/h2&gt;

&lt;p&gt;click Connect&lt;/p&gt;

&lt;p&gt;Select the ALSA tab, drag your midi controller to FluidSynth&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/qjackctl_01.jpg&quot; alt=&quot;qjackctl&quot; title=&quot;qjackctl&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;play-music&quot;&gt;Play Music!&lt;/h2&gt;

</description>
        <pubDate>Mon, 11 Jan 2016 08:00:00 -0600</pubDate>
        <link>http://tgbates.com/linux/2016/01/11/midi-keyboard.html</link>
        <guid isPermaLink="true">http://tgbates.com/linux/2016/01/11/midi-keyboard.html</guid>
        
        <category>linux</category>
        
        <category>mint</category>
        
        <category>music</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Getting Jekyll working in Linux Mint 17.1</title>
        <description>&lt;h1 id=&quot;getting-jekyll-working-in-linux-mint-171&quot;&gt;Getting Jekyll working in Linux Mint 17.1&lt;/h1&gt;

&lt;p&gt;This seems like it should have been a straightforward process but I got lost along the way.
Here is my journey back onto the path of using jekyll for my blog.&lt;/p&gt;

&lt;p&gt;(I was running into problems with missing zlib (which isn&#39;t missing) and ruby version too low for Jekyll 3, but Jekyll 2.5.3 works (or seemed to at first, details later))
&lt;a href=&quot;http://stackoverflow.com/questions/33503796/error-installing-jekyll-requires-ruby-2-0-0&quot;&gt;error-installing-jekyll-requires-ruby-2-0-0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The below command seemed to work but turned out not to be too helpful later&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo gem install jekyll -v 2.5.3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;synaptic-packages-installed-to-obtain-a-working-httplocalhost4000&quot;&gt;synaptic packages installed to obtain a working http://localhost:4000&lt;/h2&gt;

&lt;pre&gt;
jekyll (0.11.2-1)
libjs-jquery (1.7.2+dfsg-2ubuntu1)
libruby1.9.1 (1.9.3.484-2ubuntu1.2)
libyaml-0-2 (0.1.4-3ubuntu3.1)
python-pygments (1.6+dfsg-1ubuntu1.1)
ruby (1:1.9.3.4)
ruby-albino (1.3.3-2)
ruby-classifier (1.3.3-1)
ruby-coderay (1.1.0-1)
ruby-directory-watcher (1.5.1-1)
ruby-fast-stemmer (1.0.2-1)
ruby-kramdown (1.2.0-1)
ruby-liquid (2.6.1-1)
ruby-maruku (0.6.0-2)
ruby-posix-spawn (0.3.8-1)
ruby-stringex (2.0.3-1)
ruby1.9.1 (1.9.3.484-2ubuntu1.2)

libc-ares2 (1.10.0-2)
libv8-3.14.5 (3.14.5.8-5ubuntu2)
nodejs (0.10.25~dfsg2-2ubuntu1)

libruby1.9.1-dbg (1.9.3.484-2ubuntu1.2)
ri1.9.1 (1.9.3.484-2ubuntu1.2)
ruby1.9.1-dev (1.9.3.484-2ubuntu1.2)
ruby1.9.1-examples (1.9.3.484-2ubuntu1.2)
ruby1.9.1-full (1.9.3.484-2ubuntu1.2)

Removed the following packages:
ruby1.9.1-full

libruby2.0 (2.0.0.484-1ubuntu2.2)
ruby2.0 (2.0.0.484-1ubuntu2.2)
rubygems-integration (1.5)

ruby2.0-dev (2.0.0.484-1ubuntu2.2)
&lt;/pre&gt;

&lt;h2 id=&quot;then-i-went-back-to-the-github-help&quot;&gt;Then I went back to the github help&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages/&quot;&gt;Using jekyll with pages&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo gem install bundler
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;made a Gemfile like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source &#39;https://rubygems.org&#39;
gem &#39;github-pages&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;gave an error: public_suffix, ruby &amp;gt;= 2.0 required&lt;/p&gt;

&lt;pre&gt;
An error occurred while installing public_suffix (1.5.3), and Bundler cannot
continue.
Make sure that `gem install public_suffix -v &#39;1.5.3&#39;` succeeds before bundling.
&lt;/pre&gt;

&lt;h2 id=&quot;error-that-zlib-is-missing&quot;&gt;Error that zlib is missing&lt;/h2&gt;

&lt;p&gt;lots of errors with &lt;code&gt;jekyll new&lt;/code&gt; command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo gem install github-pages
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Error said zlib is missing, so try something else:&lt;/p&gt;

&lt;p&gt;let&#39;s try installing ruby-dev, ruby-dev-all, and rake&lt;/p&gt;

&lt;p&gt;and libxml2-ruby&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;more packages...&lt;/p&gt;
&lt;pre&gt;
rake (10.0.4-1)
ruby-all-dev (1:1.9.3.4)
ruby-dev (1:1.9.3.4)
ruby-libxml (2.7.0-2)
zlib1g-dev (1:1.2.8.dfsg-1ubuntu1)
&lt;/pre&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo gem install github-pages
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;pre&gt;
Building native extensions.  This could take a while...
Successfully installed nokogiri-1.6.7.1
&lt;/pre&gt;

&lt;h2 id=&quot;back-to-needing-ruby--20&quot;&gt;Back to needing Ruby &amp;gt;= 2.0&lt;/h2&gt;

&lt;pre&gt;
Fetching: typhoeus-0.8.0.gem (100%)
Successfully installed typhoeus-0.8.0
ERROR:  Error installing github-pages:
	public_suffix requires Ruby version &amp;gt;= 2.0.
&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/30425210/nokogiri-failing-to-upgrade/31603202&quot;&gt;nokogiri failing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I keep running into this problem with not having ruby 2.0, even though I installed the package.&lt;/p&gt;

&lt;h2 id=&quot;rvm-installation&quot;&gt;rvm installation&lt;/h2&gt;

&lt;p&gt;rvm looks like the solution to manage ruby versions&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/18541695/installed-ruby-using-apt-get-install-ruby-2-0-0-succeeded-but-not-using-correct&quot;&gt;rvm for setting default ruby version&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(make sure synaptic is not running before attempting to run the installation of rvm)&lt;/p&gt;

&lt;pre&gt;
  $ \curl -L https://get.rvm.io | bash -s stable --ruby
&lt;/pre&gt;

&lt;p&gt;This worked.&lt;/p&gt;

&lt;pre&gt;
$ rvm rubies

=* ruby-2.2.1 [ x86_64 ]

# =&amp;gt; - current
# =* - current &amp;amp;&amp;amp; default
#  * - default


$ ruby -v
ruby 2.2.1p85 (2015-02-26 revision 49769) [x86_64-linux]
&lt;/pre&gt;

&lt;p&gt;another advantage, now I don&#39;t have to sudo install gems&lt;/p&gt;

&lt;pre&gt;
$ gem install jekyll --no-rdoc --no-ri

...

Successfully installed jekyll-3.0.1
14 gems installed
&lt;/pre&gt;

&lt;pre&gt;
$ jekyll new myblog
New jekyll site installed in myblog. 
&lt;/pre&gt;

&lt;p&gt;Ran the following and was able to view it at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;
$ jekyll serve
&lt;/pre&gt;

&lt;pre&gt;
...
Server address: http://127.0.0.1:4000/
Server running... press ctrl-c to stop.
&lt;/pre&gt;

</description>
        <pubDate>Sat, 09 Jan 2016 08:00:00 -0600</pubDate>
        <link>http://tgbates.com/linux/2016/01/09/jekyll-ordeal.html</link>
        <guid isPermaLink="true">http://tgbates.com/linux/2016/01/09/jekyll-ordeal.html</guid>
        
        <category>linux</category>
        
        <category>mint</category>
        
        <category>jekyll</category>
        
        <category>ruby</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 09 Jan 2016 04:23:02 -0600</pubDate>
        <link>http://tgbates.com/jekyll/update/2016/01/09/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://tgbates.com/jekyll/update/2016/01/09/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
